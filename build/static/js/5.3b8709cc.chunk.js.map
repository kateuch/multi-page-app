{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","components/pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","history","useHistory","location","useLocation","console","log","quotes","ascending","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCkBdC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBCwCSC,EArCG,SAACR,GACjB,IAAMS,EAAUC,cACVC,EAAWC,cACjBC,QAAQC,IAAIH,GAEZ,IAfkBI,EAAQC,EAgBpBC,EAAiD,QADnC,IAAIC,gBAAgBP,EAASQ,QACVC,IAAI,QAEvCC,GAlBcN,EAkBYf,EAAMe,OAlBVC,EAkBkBC,EAjBrCF,EAAOO,MAAK,SAACC,EAAQC,GAC1B,OAAIR,EACKO,EAAOhB,GAAKiB,EAAOjB,GAAK,GAAK,EAE5BgB,EAAOhB,GAAKiB,EAAOjB,GAAK,GAAK,MAuBzC,OACE,eAAC,WAAD,WACE,qBAAKN,UAAWC,IAAQuB,QAAxB,SACE,yBAAQC,QAXc,WAC1BjB,EAAQkB,KAAK,CACXC,SAAUjB,EAASiB,SACnBT,OAAO,SAAD,OAAYF,EAAqB,OAAS,UAQ9C,kBAA6CA,EAAqB,aAAe,iBAEnF,oBAAIhB,UAAWC,IAAQ2B,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEExB,GAAIwB,EAAMxB,GACVF,OAAQ0B,EAAM1B,OACdD,KAAM2B,EAAM3B,MAHP2B,EAAMxB,a,yCC3BRyB,EAXO,WACpB,OACE,sBAAK/B,UAAWC,IAAQ+B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMhC,UAAU,MAAMK,GAAG,YAAzB,6BC4BS4B,UA3BG,WAChB,MAA0DC,YAAQC,KAAc,GAAxEC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAcC,EAAnC,EAA6BC,KAAoBC,EAAjD,EAAiDA,MAMjD,OAJAC,qBAAU,WACRL,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAKrC,UAAY,WAAjB,SACE,cAAC0C,EAAA,EAAD,MAIFF,EACK,mBAAGxC,UAAU,mBAAb,SAAiCwC,IAG3B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAGpD,qCACP,6CACA,cAAC,EAAD,CAAW7B,OAAQwB,OAJZ,cAAC,EAAD","file":"static/js/5.3b8709cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__31aOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__o3gY4\",\"sorting\":\"QuoteList_sorting__1tZNF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2k7cP\"};","import classes from './QuoteItem.module.css';\nimport {Link} from 'react-router-dom';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n       return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  }) ;\n}\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  console.log(location);\n\n  const queryParams = new URLSearchParams(location.search); //default JS constructur function\n  const isSortingAscending = queryParams.get('sort') === 'asc'; // quotes?sort=asc'\n\nconst sortedQuotes = sortQuotes(props.quotes, isSortingAscending)\n\n  const changeSortingHandler =() => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n    })\n    // history.push(`${location.pathname}?sort=${(isSortingAscending ? 'desc' : 'asc')}`)\n    // component rerenders after pushing! because history changes\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport { Link}  from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/newquote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React from 'react';\r\nimport QuoteList from '../quotes/QuoteList';\r\nimport useHttp from '../hooks/use-http';\r\nimport {getAllQuotes} from '../lib/api';\r\nimport {useEffect} from 'react';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport NoQuotesFound from '../quotes/NoQuotesFound'\r\n\r\nconst AllQuotes = () => {\r\n  const { sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest])\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className = 'centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    )\r\n  }\r\n  if (error) {\r\n    return <p className='centered focesed'>{error}</p>\r\n  }\r\n\r\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />\r\n  }\r\n    return <>\r\n    <h1>Quotes List</h1>\r\n    <QuoteList quotes={loadedQuotes}/>\r\n    </>\r\n}\r\n\r\nexport default AllQuotes"],"sourceRoot":""}